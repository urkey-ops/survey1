@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

:root {
    --sewa-orange: #ff6600;
    --sewa-blue: #004d99;
    --error-red: #dc2626; /* Tailwind Red 600 equivalent for consistency */
    --focus-blue: #2563eb; /* A standard focus color for non-orange elements */
}

body {
    font-family: 'Roboto', sans-serif;
    background-color: #f0f4f8;
    color: #333;
}

/* --- A11Y and Layout Helpers --- */
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap; /* Ensures text is not wrapped */
    border: 0;
}

/* --- Form Element Base Styling --- */
/* Add focus style for accessibility and consistency */
input:focus, textarea:focus, button:focus, label:focus-within { /* Added focus-within for label groups */
    outline: 2px solid var(--sewa-orange);
    outline-offset: 2px;
}

/* --- Custom Field Styling and Selection --- */
.emoji-radio-group label,
.number-scale-group label,
.location-radio-group label {
    transition: all 0.2s ease-in-out;
    cursor: pointer;
}

/* Selected state for Emoji & Number Scale */
.emoji-radio-group input:checked + label,
.number-scale-group input:checked + label {
    /* Use strong blue as the selection color for contrast against Orange buttons (Next/Submit) */
    border-color: var(--focus-blue); 
    background-color: #eff6ff; /* Light blue background for selection */
    transform: scale(1.05); /* Slight bounce, adjusted from 1.1 to 1.05 */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1), 0 0 0 2px var(--focus-blue);
    color: #333; /* Keep text color readable */
}

/* Selected state for Location Radio Group */
.location-radio-group input:checked + label {
    background-color: var(--sewa-orange);
    color: white;
    border-color: var(--sewa-orange);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* --- Star Rating Fixes --- */
.star-rating input {
    display: none;
}
.star-rating label.star { /* Target the label element with class 'star' */
    color: #ccc; /* Default grey color */
    transition: color 0.2s;
}

/* Checked stars and stars preceding the checked one should be highlighted */
.star-rating input:checked ~ label.star {
    color: #ffc107; /* Gold/Yellow for checked state */
}

/* Hover effect: highlight current star and all preceding stars */
.star-rating label.star:hover,
.star-rating label.star:hover ~ label.star {
    color: #ffc107;
}

/* --- Custom Contact Field Transition --- */
.hidden-fields {
    opacity: 0;
    max-height: 0;
    overflow: hidden;
    pointer-events: none;
    transition: opacity 0.4s ease-in-out, max-height 0.4s ease-in-out; /* Increased duration for smoother effect */
}
.visible-fields {
    opacity: 1;
    max-height: 500px; /* Adjusted a practical max height for field content */
    pointer-events: auto;
    transition: opacity 0.4s ease-in-out, max-height 0.4s ease-in-out;
}

/* --- Validation and Error States --- */
.has-error {
    border-color: var(--error-red) !important; 
    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.5) !important;
}

/* **NEW ADDITION: Error Message Style** */
.error-message {
    display: block; /* Ensure it's rendered as a block element */
    color: var(--error-red);
    font-size: 0.875rem; /* text-sm equivalent */
    margin-top: 0.25rem;
}

/* --- Completion Screen and Spinner --- */
.checkmark-container {
    min-height: 300px;
}
.checkmark-circle {
    background-color: #22c55e;
    animation: bounceIn 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.27);
}
.checkmark-icon {
    font-weight: bold;
}
.spinner {
    border-radius: 50%;
    border: 4px solid rgba(255, 255, 255, 0.3);
    border-top-color: #fff;
    width: 20px; /* Ensure size is defined */
    height: 20px; /* Ensure size is defined */
    animation: spin 1s ease-in-out infinite;
}

/* Keyframes */
@keyframes bounceIn {
    0% { transform: scale(0); opacity: 0; }
    60% { transform: scale(1.1); opacity: 1; }
    100% { transform: scale(1); }
}
@keyframes spin {
    to { transform: rotate(360deg); }
}
